# ==============================================================================
# Functions without parameters.
# ==============================================================================
Given coffee (function without parameters):
  myFunc = () -> x * x # inline comment

Do (trigger doge):
  \<C-d>

Expect coffee (generated comment with @description and @function tags):
  ###
  @description TODO
  @function myFunc
  ###
  myFunc = () -> x * x # inline comment

# ==============================================================================
# Functions with parameters.
# ==============================================================================
Given coffee (function with parameters):
  myFunc = (p1, p2, p3) -> x * x

Do (trigger doge):
  \<C-d>

Expect coffee (generated comment with @description, @function and @param tags):
  ###
  @description TODO
  @function myFunc
  @param {*} p1 TODO
  @param {*} p2 TODO
  @param {*} p3 TODO
  ###
  myFunc = (p1, p2, p3) -> x * x

# ==============================================================================
# Fat-arrow functions with parameters.
# ==============================================================================
Given coffee (function with parameters):
  myFunc = (p1, p2, p3) => x * x

Do (trigger doge):
  \<C-d>

Expect coffee (generated comment with @description, @function and @param tags):
  ###
  @description TODO
  @function myFunc
  @param {*} p1 TODO
  @param {*} p2 TODO
  @param {*} p3 TODO
  ###
  myFunc = (p1, p2, p3) => x * x

# ==============================================================================
# Prototype functions.
# ==============================================================================
Given coffee (prototype function):
  String::dasherize = ->
    this.replace /_/g, "-"

Do (trigger doge):
  \<C-d>

Expect coffee (generated comment with @description and @function tags):
  ###
  @description TODO
  @function String#dasherize
  ###
  String::dasherize = ->
    this.replace /_/g, "-"
